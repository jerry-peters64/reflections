What happens when you initialize a repository? Why do you need to do it?
An initial snapshot is taken of all the files in the directory. You have to do it in order to establish a baseline.

How is the staging area different from the working directory and the repository? What value do you think it offers?
The staging area contains uncommitted files.

How can you use the staging area to make sure you have one commit per logical change?
By comparing the satging area to the most recent commit

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
When you want to try new things but keep the original intact

How do the diagrams help you visualize the branch structure?
SO you understand when it brances off.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
Twp branches merged together result in one master branch with access to both commit histories.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
Automatic keeps track of history for you.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
Not sure why.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
Forks only exist on GitHub. Clones make a cop of a repsitory and branches allow you to try different features out without affecting production code.

What is the benefit of having a copy of the last known state of the remote stored locally?
Allows you to merge later but keep control locally.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
Coordination and deconfliction would definitely be harder.